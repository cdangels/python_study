'''Explorar caracteres Unicode desde Python'''

for i in range(0x2600, 0x260A):  # Rango de sÃ­mbolos meteorolÃ³gicos y miscelÃ¡neos
    print(f"U+{i:04X}: {chr(i)}") # Imprimir el cÃ³digo Unicode y el caracter, el :04X es para formatear el cÃ³digo Unicode con cuatro caracteres hexadecimales

print()
import tkinter as tk
from tkinter import font

'''El prefijo \\uf generalmente indica caracteres de fuentes especiales como FontAwesome, Material Icons, etc. Para ver los disponibles en una fuente:'''
root = tk.Tk()
fa_font = font.Font(family="Font Awesome", size=12)
print(fa_font.actual())  # Ver informaciÃ³n de la fuente

print()
'''Diferencia entre los unicode 0x \\u \\U'''
    # Python puede intentar interpretar \u \U como caracteres Unicode y fallar.
    # SoluciÃ³n: Escapar las barras invertidas con doble \\
        
# 0x	NÃºmero hexadecimal en Python	chr(0x1F311) â†’ ğŸŒ‘
print(chr(0x263E))  # â˜¾ (Luna menguante)
print(chr(0x1F311)) # ğŸŒ‘ (Luna nueva)
    # \u	Unicode en cadena (mÃ¡x. 4 dÃ­gitos)	"\u263E" â†’ â˜¾
print("\u263E")  # â˜¾
    # \U	Unicode en cadena (mÃ¡s de 4 dÃ­gitos)	"\U0001F311" â†’ ğŸŒ‘
print("\U0001F311")  # ğŸŒ‘

